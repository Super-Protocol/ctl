name: Build
on:
    release:
        types: [published]
    pull_request:
    workflow_dispatch:

jobs:
    # build-binary:
    #     runs-on: ${{ matrix.os }}
    #     strategy:
    #         matrix:
    #             include:
    #                 - os: macos-12 # Intel Mac
    #                   output: spctl-macos-x64
    #                 - os: ubuntu-20.04
    #                   output: spctl-linux-x64
    #                 - os: macos-14 # M1 Mac
    #                   output: spctl-macos-arm64
    #                 - os: windows-latest
    #                   output: spctl-win-x64
    #     steps:
    #         - name: Checkout repository
    #           uses: actions/checkout@v2
    #         - name: Setup Node.js environment
    #           uses: actions/setup-node@v2.5.1
    #           with:
    #               node-version: 16.15.0
    #               scope: super-protocol
    #         - name: Install dependencies
    #           run: npm ci
    #         - name: Build binary
    #           run: |
    #               npm run build
    #               if [ "${{ matrix.os }}" == "windows-latest" ]; then
    #                 mv ./dist/spctl.exe ./dist/${{ matrix.output }}
    #               else
    #                 mv ./dist/spctl ./dist/${{ matrix.output }}
    #               fi
    #           shell: bash
    #         - name: "Save build results for release job"
    #           uses: actions/upload-artifact@v2
    #           with:
    #               name: release
    #               path: dist/spctl-*
    #               retention-days: 1

    build-package:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        - name: Setup Node.js environment
          uses: actions/setup-node@v2.5.1
          with:
            node-version: 16.15.0
            scope: super-protocol
        - name: Install dependencies
          run: npm ci
        - name: Compile *.ts files
          run: npm run build:prepare
        - name: Create a tarball from a package
          run: npm pack
        - name: "Save package for release job"
          uses: actions/upload-artifact@v2
          with:
              name: package
              path: super-protocol-*.tgz
              retention-days: 1

    create-release:
        runs-on: ubuntu-20.04
        needs: [build-package]
        steps:
            # - name: "Download binary artifacts"
            #   uses: actions/download-artifact@v2
            #   with:
            #       name: release
            - name: "Download package artifact"
              uses: actions/download-artifact@v2
              with:
                  name: package
            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      super-protocol-*.tgz
